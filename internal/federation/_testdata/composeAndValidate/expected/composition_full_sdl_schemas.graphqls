directive @core(feature: String!, as: String, for: core__Purpose) on SCHEMA
directive @join__field(graph: join__Graph, requires: join__FieldSet, provides: join__FieldSet) on FIELD_DEFINITION
directive @join__graph(name: String!, url: String!) on ENUM_VALUE
directive @join__owner(graph: join__Graph!) on OBJECT | INTERFACE
directive @join__type(graph: join__Graph!, key: join__FieldSet) on OBJECT | INTERFACE
directive @myExecutableDirective on FIELD
type Mutation {
	updateProduct: Product @join__field(graph: SERVICEA)
	createReview: Review @join__field(graph: SERVICEB)
}
type Product @join__owner(graph: SERVICEA) @join__type(graph: SERVICEA, key: "sku") {
	sku: String!
	price: Float
}
type Query {
	product: Product @join__field(graph: SERVICEA)
	review: Review @join__field(graph: SERVICEB)
}
type Review @join__owner(graph: SERVICEB) @join__type(graph: SERVICEB, key: "id") {
	id: String!
	content: String
}
enum core__Purpose {
	"""
	`EXECUTION` features provide metadata necessary to for operation execution.
	"""
	EXECUTION
	"""
	`SECURITY` features provide metadata necessary to securely resolve fields.
	"""
	SECURITY
}
scalar join__FieldSet
enum join__Graph {
	SERVICEA @join__graph(name: "serviceA", url: "")
	SERVICEB @join__graph(name: "serviceB", url: "")
}
