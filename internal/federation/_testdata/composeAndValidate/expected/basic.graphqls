directive @core(feature: String!, as: String, for: core__Purpose) on SCHEMA
directive @join__field(graph: join__Graph, requires: join__FieldSet, provides: join__FieldSet) on FIELD_DEFINITION
directive @join__graph(name: String!, url: String!) on ENUM_VALUE
directive @join__owner(graph: join__Graph!) on OBJECT | INTERFACE
directive @join__type(graph: join__Graph!, key: join__FieldSet) on OBJECT | INTERFACE
type Product @join__owner(graph: PRODUCTS) @join__type(graph: PRODUCTS, key: "upc") @join__type(graph: INVENTORY, key: "upc") @join__type(graph: REVIEWS, key: "upc") {
	upc: String!
	sku: String!
	name: String
	price: String
	inStock: Boolean @join__field(graph: INVENTORY)
	reviews: [Review] @join__field(graph: REVIEWS)
}
type Query {
	me: User @join__field(graph: ACCOUNTS)
	topProducts(first: Int): [Product] @join__field(graph: PRODUCTS)
}
type Review @join__owner(graph: REVIEWS) @join__type(graph: REVIEWS, key: "id") {
	id: ID!
	body: String
	author: User
	product: Product
}
type User @join__owner(graph: ACCOUNTS) @join__type(graph: ACCOUNTS, key: "id") @join__type(graph: REVIEWS, key: "id") {
	id: ID!
	name: String
	username: String
	birthDate: String
	reviews: [Review] @join__field(graph: REVIEWS)
}
enum core__Purpose {
	"""
	`EXECUTION` features provide metadata necessary to for operation execution.
	"""
	EXECUTION
	"""
	`SECURITY` features provide metadata necessary to securely resolve fields.
	"""
	SECURITY
}
scalar join__FieldSet
enum join__Graph {
	ACCOUNTS @join__graph(name: "Accounts", url: "http://accounts.example.com/query")
	INVENTORY @join__graph(name: "Inventory", url: "http://inventory.example.com/query")
	PRODUCTS @join__graph(name: "Products", url: "http://products.example.com/query")
	REVIEWS @join__graph(name: "Reviews", url: "http://reviews.example.com/query")
}
