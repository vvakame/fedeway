# copied from: federation/federation-integration-testsuite-js/src/fixtures/books.ts

directive @stream on FIELD
directive @transform(from: String!) on FIELD

enum CacheControlScope {
    PUBLIC
    PRIVATE
}

directive @cacheControl(
    maxAge: Int
    scope: CacheControlScope
    inheritMaxAge: Boolean
) on FIELD_DEFINITION | OBJECT | INTERFACE | UNION


extend type Query {
    book(isbn: String!): Book
    books: [Book]
    library(id: ID!): Library
}

type Library @key(fields: "id") {
    id: ID!
    name: String
}

# FIXME: turn back on when unions are supported in composition
# type LibraryAccount @key(fields: "id") {
#   id: ID!
#   library: Library
# }

# extend union AccountType = LibraryAccount

type Book @key(fields: "isbn") @cacheControl(maxAge: 700) {
    isbn: String!
    title: String
    year: Int
    similarBooks: [Book]!
    metadata: [MetadataOrError]
}

# Value type
type KeyValue {
    key: String!
    value: String!
}

# Value type
type Error {
    code: Int
    message: String
}

# Value type
union MetadataOrError = KeyValue | Error
