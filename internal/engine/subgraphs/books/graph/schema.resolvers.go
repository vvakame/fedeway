package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"

	"github.com/vvakame/fedeway/internal/engine/subgraphs/books/graph/generated"
	"github.com/vvakame/fedeway/internal/engine/subgraphs/books/graph/model"
)

// Book is the resolver for the book field.
func (r *queryResolver) Book(ctx context.Context, isbn string) (*model.Book, error) {
	for _, book := range r.books {
		if book.Isbn == isbn {
			return book, nil
		}
	}

	return nil, nil
}

// Books is the resolver for the books field.
func (r *queryResolver) Books(ctx context.Context) ([]*model.Book, error) {
	return r.books, nil
}

// Library is the resolver for the library field.
func (r *queryResolver) Library(ctx context.Context, id string) (*model.Library, error) {
	for _, library := range r.libraries {
		if library.ID == id {
			return library, nil
		}
	}

	return nil, nil
}

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
