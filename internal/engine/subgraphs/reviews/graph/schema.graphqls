# copied from: federation/federation-integration-testsuite-js/src/fixtures/reviews.ts

directive @stream on FIELD
directive @transform(from: String!) on FIELD
directive @tag(name: String!) repeatable on
    | INTERFACE
    | FIELD_DEFINITION
    | OBJECT
    | UNION

extend type Query {
    topReviews(first: Int = 5): [Review]
}

type Review @key(fields: "id") {
    id: ID!
    body(format: Boolean = false): String
    author: User @provides(fields: "username")
    product: Product
    metadata: [MetadataOrError]
}

input UpdateReviewInput {
    id: ID!
    body: String
}

extend type UserMetadata {
    address: String # TODO gqlgen issue 1138  @external
}

extend type User @key(fields: "id") @tag(name: "from-reviews") {
    id: ID! @external @tag(name: "on-external")
    username: String @external
    reviews: [Review]
    numberOfReviews: Int!
    metadata: [UserMetadata] # TODO gqlgen issue 1138  @external
    goodAddress: Boolean # TODO gqlgen issue 1138  @requires(fields: "metadata { address }")
}

extend interface Product @tag(name: "from-reviews") {
    reviews: [Review]
}

extend type Furniture implements Product @key(fields: "upc") {
    upc: String! @external
    reviews: [Review]
}

extend type Book implements Product @key(fields: "isbn") {
    isbn: String! @external
    reviews: [Review]
    similarBooks: [Book]! # TODO gqlgen issue 1138  @external
    relatedReviews: [Review!]! # TODO gqlgen issue 1138  @requires(fields: "similarBooks { isbn }")
}

extend interface Vehicle {
    retailPrice: String
}

extend type Car implements Vehicle @key(fields: "id") {
    id: String! @external
    price: String @external
    retailPrice: String @requires(fields: "price")
}

extend type Van implements Vehicle @key(fields: "id") {
    id: String! @external
    price: String @external
    retailPrice: String @requires(fields: "price")
}

input ReviewProduct {
    upc: String!
    body: String!
    stars: Int @deprecated(reason: "Stars are no longer in use")
}

extend type Mutation {
    reviewProduct(input: ReviewProduct!): Product
    updateReview(review: UpdateReviewInput!): Review
    deleteReview(id: ID!): Boolean
}

# Value type
type KeyValue {
    key: String!
    value: String!
}

# Value type
type Error {
    code: Int
    message: String
}

# Value type
union MetadataOrError = KeyValue | Error
